# Generated by Django 5.1.5 on 2025-05-08 21:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0002_initial'),
        ('manufacturing', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('warranty_end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('MAINTENANCE', 'Under Maintenance'), ('REPAIR', 'Under Repair'), ('DISPOSED', 'Disposed')], default='ACTIVE', max_length=20)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('maintenance_interval_days', models.IntegerField(default=90, help_text='Maintenance interval in days')),
                ('last_maintenance_date', models.DateField(blank=True, null=True)),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('parent_equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_equipment', to='maintenance.equipment')),
                ('work_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipment', to='manufacturing.workcenter')),
            ],
            options={
                'db_table': 'equipment',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='FixtureCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('check_date', models.DateField()),
                ('status', models.CharField(choices=[('PASSED', 'Passed'), ('FAILED', 'Failed'), ('NEEDS_REPAIR', 'Needs Repair'), ('REPAIRED', 'Repaired')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('next_check_date', models.DateField()),
                ('visual_inspection', models.BooleanField(default=True)),
                ('dimensional_check', models.BooleanField(default=False)),
                ('functional_test', models.BooleanField(default=False)),
                ('check_parameters', models.JSONField(blank=True, null=True)),
                ('checked_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fixture_checks', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixture_checks', to='manufacturing.fixture')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'fixture_check',
                'ordering': ['-check_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintenance_type', models.CharField(choices=[('PREVENTIVE', 'Preventive'), ('CORRECTIVE', 'Corrective'), ('PREDICTIVE', 'Predictive'), ('BREAKDOWN', 'Breakdown'), ('SAFETY', 'Safety')], default='PREVENTIVE', max_length=20)),
                ('scheduled_date', models.DateField()),
                ('estimated_duration_hours', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold')], default='PLANNED', max_length=20)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_maintenance', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_schedules', to='maintenance.equipment')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'maintenance_schedule',
                'ordering': ['scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceWorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('work_order_number', models.CharField(max_length=50, unique=True)),
                ('maintenance_type', models.CharField(choices=[('PREVENTIVE', 'Preventive'), ('CORRECTIVE', 'Corrective'), ('PREDICTIVE', 'Predictive'), ('BREAKDOWN', 'Breakdown'), ('SAFETY', 'Safety')], max_length=20)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold')], default='PLANNED', max_length=20)),
                ('planned_start_date', models.DateTimeField()),
                ('planned_end_date', models.DateTimeField()),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('total_downtime_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_work_orders', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_orders', to='maintenance.equipment')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reported_maintenance', to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='work_orders', to='maintenance.maintenanceschedule')),
            ],
            options={
                'db_table': 'maintenance_work_order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task_description', models.CharField(max_length=200)),
                ('detailed_instructions', models.TextField(blank=True, null=True)),
                ('estimated_hours', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('SKIPPED', 'Skipped')], default='PENDING', max_length=20)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('requires_parts', models.BooleanField(default=False)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_tasks', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='maintenance.maintenanceworkorder')),
            ],
            options={
                'db_table': 'maintenance_task',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='MaintenancePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity_required', models.DecimalField(decimal_places=3, max_digits=10)),
                ('quantity_used', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_usages', to='inventory.product')),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='maintenance.maintenanceworkorder')),
            ],
            options={
                'db_table': 'maintenance_part',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintenance_type', models.CharField(choices=[('PREVENTIVE', 'Preventive'), ('CORRECTIVE', 'Corrective'), ('PREDICTIVE', 'Predictive'), ('BREAKDOWN', 'Breakdown'), ('SAFETY', 'Safety')], max_length=20)),
                ('maintenance_date', models.DateTimeField()),
                ('description', models.TextField()),
                ('hours_spent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_logs', to='maintenance.equipment')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='performed_maintenance', to=settings.AUTH_USER_MODEL)),
                ('work_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='maintenance.maintenanceworkorder')),
            ],
            options={
                'db_table': 'maintenance_log',
                'ordering': ['-maintenance_date'],
            },
        ),
        migrations.CreateModel(
            name='CalibrationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calibration_date', models.DateField()),
                ('calibrated_by', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('PASSED', 'Passed'), ('FAILED', 'Failed'), ('PENDING', 'Pending'), ('ADJUSTED', 'Adjusted and Passed')], max_length=20)),
                ('certificate_number', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('next_calibration_date', models.DateField()),
                ('tolerance_values', models.JSONField(blank=True, null=True)),
                ('measured_values', models.JSONField(blank=True, null=True)),
                ('deviations', models.JSONField(blank=True, null=True)),
                ('control_gauge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibration_records', to='manufacturing.controlgauge')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'calibration_record',
                'ordering': ['-calibration_date'],
                'indexes': [models.Index(fields=['control_gauge', 'calibration_date'], name='calibration_control_bd1694_idx'), models.Index(fields=['next_calibration_date'], name='calibration_next_ca_8ff855_idx'), models.Index(fields=['status'], name='calibration_status_f95eeb_idx'), models.Index(fields=['certificate_number'], name='calibration_certifi_cef4b1_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['code'], name='equipment_code_c4fee0_idx'),
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['status'], name='equipment_status_92035a_idx'),
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['next_maintenance_date'], name='equipment_next_ma_8c7b28_idx'),
        ),
        migrations.AddIndex(
            model_name='fixturecheck',
            index=models.Index(fields=['fixture', 'check_date'], name='fixture_che_fixture_6bd9ba_idx'),
        ),
        migrations.AddIndex(
            model_name='fixturecheck',
            index=models.Index(fields=['next_check_date'], name='fixture_che_next_ch_471535_idx'),
        ),
        migrations.AddIndex(
            model_name='fixturecheck',
            index=models.Index(fields=['status'], name='fixture_che_status_073dad_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceschedule',
            index=models.Index(fields=['scheduled_date'], name='maintenance_schedul_c05a66_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceschedule',
            index=models.Index(fields=['status'], name='maintenance_status_da4263_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceschedule',
            index=models.Index(fields=['equipment', 'status'], name='maintenance_equipme_5d49e3_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceworkorder',
            index=models.Index(fields=['work_order_number'], name='maintenance_work_or_190b74_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceworkorder',
            index=models.Index(fields=['status'], name='maintenance_status_e98684_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceworkorder',
            index=models.Index(fields=['planned_start_date'], name='maintenance_planned_f82a10_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceworkorder',
            index=models.Index(fields=['equipment', 'status'], name='maintenance_equipme_efdbdc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='maintenancepart',
            unique_together={('work_order', 'part')},
        ),
        migrations.AddIndex(
            model_name='maintenancelog',
            index=models.Index(fields=['equipment', 'maintenance_date'], name='maintenance_equipme_6f7a82_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancelog',
            index=models.Index(fields=['maintenance_type'], name='maintenance_mainten_b66601_idx'),
        ),
    ]
