version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file: .env.prod
    command: gunicorn --config gunicorn.conf.py erp_core.wsgi:application
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
    expose:
      - 8000
    networks:
      - erp_network
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    env_file: .env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - erp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7
    networks:
      - erp_network
    volumes:
      - redisdata:/data

  nginx:
    image: nginx:1.25
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    networks:
      - erp_network
    depends_on:
      - web
    command: >
      /bin/bash -c "rm -f /etc/nginx/conf.d/default.conf
      && nginx -g 'daemon off;'"

volumes:
  pgdata:
  redisdata:
  static_volume:
  media_volume:

networks:
  erp_network:
    driver: bridge
