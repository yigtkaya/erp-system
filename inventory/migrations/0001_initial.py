# Generated by Django 5.1.5 on 2025-05-08 21:10

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0003_auditlog_customer_permission_rolepermission_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TechnicalDrawing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.CharField(max_length=20)),
                ('drawing_code', models.CharField(max_length=50)),
                ('effective_date', models.DateField()),
                ('is_current', models.BooleanField(default=True)),
                ('revision_notes', models.TextField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, help_text='List of tags', null=True)),
            ],
            options={
                'db_table': 'technical_drawings',
                'ordering': ['-effective_date', '-version'],
            },
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tool_code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('tool_type', models.CharField(max_length=50)),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('MAINTENANCE', 'Under Maintenance'), ('BROKEN', 'Broken'), ('RETIRED', 'Retired')], default='AVAILABLE', max_length=20)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('max_usage_count', models.IntegerField(blank=True, null=True)),
                ('current_usage_count', models.IntegerField(default=0)),
                ('last_maintenance_date', models.DateField(blank=True, null=True)),
                ('maintenance_interval_days', models.IntegerField(default=90)),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('dimensions', models.JSONField(blank=True, null=True)),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'tools',
                'ordering': ['tool_code'],
            },
        ),
        migrations.CreateModel(
            name='ToolUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issued_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('returned_date', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.IntegerField(default=1)),
                ('condition_before', models.CharField(choices=[('NEW', 'New'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor')], default='GOOD', max_length=50)),
                ('condition_after', models.CharField(blank=True, choices=[('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor'), ('BROKEN', 'Broken')], max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tool_usages',
                'ordering': ['-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_code', models.CharField(max_length=10, unique=True)),
                ('unit_name', models.CharField(max_length=50)),
                ('category', models.CharField(help_text='e.g., Length, Weight, Volume', max_length=50)),
            ],
            options={
                'db_table': 'units_of_measure',
                'ordering': ['category', 'unit_code'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inventory_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('product_name', models.CharField(max_length=100)),
                ('project_name', models.CharField(blank=True, max_length=100, null=True)),
                ('product_type', models.CharField(choices=[('MONTAGED', 'Montaged'), ('SEMI', 'Semi'), ('SINGLE', 'Single'), ('STANDARD_PART', 'Standard Part')], max_length=20)),
                ('multicode', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('current_stock', models.IntegerField(default=0)),
                ('reserved_stock', models.IntegerField(default=0)),
                ('reorder_point', models.IntegerField(blank=True, null=True)),
                ('lead_time_days', models.IntegerField(blank=True, null=True)),
                ('material_type', models.CharField(blank=True, choices=[('STEEL', 'Steel'), ('ALUMINUM', 'Aluminum'), ('STAINLESS', 'Stainless Steel'), ('BRASS', 'Brass'), ('COPPER', 'Copper'), ('PLASTIC', 'Plastic'), ('OTHER', 'Other')], max_length=20, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('dimensions', models.JSONField(blank=True, help_text='Length, Width, Height in mm', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tags', models.JSONField(blank=True, help_text='List of tags for searching', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.customer')),
                ('inventory_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.inventorycategory')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'products',
                'ordering': ['product_code'],
            },
        ),
        migrations.CreateModel(
            name='ProductBOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit_of_measure', models.CharField(max_length=20)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('child_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bom_children', to='inventory.product')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('parent_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bom_parent', to='inventory.product')),
            ],
            options={
                'db_table': 'product_bom',
                'ordering': ['parent_product', 'position'],
            },
        ),
        migrations.CreateModel(
            name='ProductStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('receipt_date', models.DateField(default=django.utils.timezone.now)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.inventorycategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='inventory.product')),
            ],
            options={
                'db_table': 'product_stock',
                'ordering': ['product', 'category'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('movement_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reference_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reference_id', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to=settings.AUTH_USER_MODEL)),
                ('from_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outgoing_movements', to='inventory.inventorycategory')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.product')),
                ('to_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incoming_movements', to='inventory.inventorycategory')),
            ],
            options={
                'db_table': 'stock_movements',
                'ordering': ['-movement_date'],
            },
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_type', models.CharField(choices=[('PURCHASE_RECEIPT', 'Purchase Receipt'), ('SALES_ISSUE', 'Sales Issue'), ('PRODUCTION_RECEIPT', 'Production Receipt'), ('PRODUCTION_ISSUE', 'Production Issue'), ('TRANSFER_IN', 'Transfer In'), ('TRANSFER_OUT', 'Transfer Out'), ('RETURN_RECEIPT', 'Return Receipt'), ('SCRAP', 'Scrap'), ('ADJUSTMENT_IN', 'Adjustment In'), ('ADJUSTMENT_OUT', 'Adjustment Out')], max_length=30)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='inventory.inventorycategory')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_transactions', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.product')),
            ],
            options={
                'db_table': 'stock_transactions',
                'ordering': ['-transaction_date'],
            },
        ),
    ]
