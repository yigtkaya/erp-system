# Generated by Django 4.2.8 on 2025-05-14 21:24

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventory', '0003_delete_tool'),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlGauge',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock_code', models.CharField(db_index=True, default='', max_length=50, unique=True)),
                ('stock_name', models.CharField(default='', max_length=100)),
                ('stock_type', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('measuring_range', models.CharField(blank=True, max_length=100, null=True)),
                ('resolution', models.CharField(blank=True, max_length=50, null=True)),
                ('calibration_made_by', models.CharField(blank=True, max_length=100, null=True)),
                ('calibration_date', models.DateField(blank=True, null=True)),
                ('calibration_per_year', models.CharField(default='1 / Yıl', max_length=50)),
                ('upcoming_calibration_date', models.DateField(blank=True, null=True)),
                ('certificate_no', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('UYGUN', 'Uygun'), ('KULLANILMIYOR', 'Kullanılmıyor'), ('HURDA', 'Hurda'), ('KAYIP', 'Kayıp'), ('BAKIMDA', 'Bakımda'), ('KALIBRASYONDA', 'Kalibrasyonda')], default='KULLANILMIYOR', max_length=20)),
                ('current_location', models.CharField(blank=True, max_length=100, null=True)),
                ('scrap_lost_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Control Gauge',
                'verbose_name_plural': 'Control Gauges',
            },
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(db_index=True, default='', max_length=50, unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=20)),
            ],
            options={
                'verbose_name': 'Fixture',
                'verbose_name_plural': 'Fixtures',
            },
        ),
        migrations.CreateModel(
            name='Holder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock_code', models.CharField(db_index=True, default='', max_length=50, unique=True)),
                ('supplier_name', models.CharField(default='', max_length=100)),
                ('product_code', models.CharField(default='', max_length=50)),
                ('unit_price_tl', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('unit_price_euro', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('unit_price_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('holder_type', models.CharField(default='', max_length=50)),
                ('pulley_type', models.CharField(default='', max_length=50)),
                ('water_cooling', models.BooleanField(default=False)),
                ('distance_cooling', models.BooleanField(default=False)),
                ('tool_connection_diameter', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('holder_type_enum', models.CharField(default='', max_length=50)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('MAINTENANCE', 'Under Maintenance'), ('BROKEN', 'Broken'), ('RETIRED', 'Retired')], default='AVAILABLE', max_length=20)),
                ('row', models.IntegerField(default=0)),
                ('column', models.IntegerField(default=0)),
                ('table_id', models.UUIDField(default=uuid.uuid4)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Holder',
                'verbose_name_plural': 'Holders',
            },
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material_code', models.CharField(max_length=50, unique=True)),
                ('material_name', models.CharField(max_length=100)),
                ('current_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reserved_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('material_type', models.CharField(choices=[('STEEL', 'Steel'), ('ALUMINUM', 'Aluminum'), ('STAINLESS', 'Stainless Steel'), ('BRASS', 'Brass'), ('COPPER', 'Copper'), ('PLASTIC', 'Plastic'), ('OTHER', 'Other')], default='STEEL', max_length=20)),
                ('width', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('height', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('thickness', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('diameter_mm', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('weight_per_unit', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('reorder_point', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('lead_time_days', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tags', models.JSONField(blank=True, help_text='List of tags for searching', null=True)),
            ],
            options={
                'verbose_name': 'Raw Material',
                'verbose_name_plural': 'Raw Materials',
                'db_table': 'raw_materials',
                'ordering': ['material_code'],
            },
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock_code', models.CharField(db_index=True, default='', max_length=50, unique=True)),
                ('supplier_name', models.CharField(default='', max_length=100)),
                ('product_code', models.CharField(default='', max_length=50)),
                ('unit_price_tl', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('unit_price_euro', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('unit_price_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tool_insert_code', models.CharField(default='', max_length=100)),
                ('tool_material', models.CharField(default='', max_length=100)),
                ('tool_diameter', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tool_length', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tool_width', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tool_height', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tool_angle', models.FloatField(default=0.0)),
                ('tool_radius', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tool_connection_diameter', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tool_type', models.CharField(default='', max_length=50)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('MAINTENANCE', 'Under Maintenance'), ('BROKEN', 'Broken'), ('RETIRED', 'Retired')], default='AVAILABLE', max_length=20)),
                ('row', models.IntegerField(default=0)),
                ('column', models.IntegerField(default=0)),
                ('table_id', models.UUIDField(default=uuid.uuid4)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
            ],
            options={
                'verbose_name': 'Tool',
                'verbose_name_plural': 'Tools',
            },
        ),
        migrations.CreateModel(
            name='ToolUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issued_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('returned_date', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.IntegerField(default=1)),
                ('condition_before', models.CharField(choices=[('NEW', 'New'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor'), ('BROKEN', 'Broken')], default='GOOD', max_length=50)),
                ('condition_after', models.CharField(blank=True, choices=[('NEW', 'New'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor'), ('BROKEN', 'Broken')], max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tool_usages',
                'ordering': ['-issued_date'],
            },
        ),
        migrations.AlterModelOptions(
            name='productbom',
            options={'ordering': ['operation_sequence', 'child_product__product_code']},
        ),
        migrations.AlterUniqueTogether(
            name='productbom',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='product',
            name='material_type',
        ),
        migrations.AddField(
            model_name='productbom',
            name='operation_sequence',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='productbom',
            name='scrap_percentage',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5),
        ),
        migrations.AlterField(
            model_name='inventorycategory',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='inventorycategory',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='product',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='product',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='productbom',
            name='child_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_in_products', to='inventory.product'),
        ),
        migrations.AlterField(
            model_name='productbom',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='productbom',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='productbom',
            name='parent_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bom_items', to='inventory.product'),
        ),
        migrations.AlterField(
            model_name='productstock',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='productstock',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.product'),
        ),
        migrations.AlterField(
            model_name='stocktransaction',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='stocktransaction',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.product'),
        ),
        migrations.AlterField(
            model_name='technicaldrawing',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='technicaldrawing',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='productbom',
            unique_together={('parent_product', 'child_product')},
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['product'], name='stock_movem_product_911dad_idx'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='raw_material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.rawmaterial'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['raw_material'], name='stock_movem_raw_mat_d168b1_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['movement_date'], name='stock_movem_movemen_c24231_idx'),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='raw_material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.rawmaterial'),
        ),
        migrations.AddIndex(
            model_name='stocktransaction',
            index=models.Index(fields=['raw_material', 'transaction_date'], name='stock_trans_raw_mat_cfd06d_idx'),
        ),
        migrations.AddField(
            model_name='toolusage',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='toolusage',
            name='issued_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='issued_tool_usages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='toolusage',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='toolusage',
            name='returned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_tool_usages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='toolusage',
            name='tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='inventory.tool'),
        ),
        migrations.AddField(
            model_name='tool',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tool',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rawmaterial',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rawmaterial',
            name='inventory_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.inventorycategory'),
        ),
        migrations.AddField(
            model_name='rawmaterial',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rawmaterial',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.unitofmeasure'),
        ),
        migrations.AddField(
            model_name='holder',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='holder',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fixture',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fixture',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='controlgauge',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='controlgauge',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='productbom',
            name='effective_date',
        ),
        migrations.RemoveField(
            model_name='productbom',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='productbom',
            name='position',
        ),
        migrations.RemoveField(
            model_name='productbom',
            name='unit_of_measure',
        ),
        migrations.RemoveField(
            model_name='productbom',
            name='version',
        ),
        # This AddField operation was moved up
        migrations.AddIndex(
            model_name='toolusage',
            index=models.Index(fields=['tool'], name='tool_usages_tool_id_da3991_idx'),
        ),
        migrations.AddIndex(
            model_name='toolusage',
            index=models.Index(fields=['issued_date'], name='tool_usages_issued__e126c5_idx'),
        ),
        migrations.AddIndex(
            model_name='toolusage',
            index=models.Index(fields=['returned_date'], name='tool_usages_returne_590f40_idx'),
        ),
        migrations.AddIndex(
            model_name='toolusage',
            index=models.Index(fields=['issued_by'], name='tool_usages_issued__4cf3db_idx'),
        ),
        migrations.AddIndex(
            model_name='toolusage',
            index=models.Index(fields=['returned_to'], name='tool_usages_returne_6fc544_idx'),
        ),
        migrations.AddIndex(
            model_name='tool',
            index=models.Index(fields=['tool_type'], name='inventory_t_tool_ty_9d6388_idx'),
        ),
        migrations.AddIndex(
            model_name='tool',
            index=models.Index(fields=['status'], name='inventory_t_status_d42220_idx'),
        ),
        migrations.AddIndex(
            model_name='rawmaterial',
            index=models.Index(fields=['material_code'], name='raw_materia_materia_373826_idx'),
        ),
        migrations.AddIndex(
            model_name='rawmaterial',
            index=models.Index(fields=['material_type'], name='raw_materia_materia_b1a6f8_idx'),
        ),
        migrations.AddIndex(
            model_name='rawmaterial',
            index=models.Index(fields=['inventory_category'], name='raw_materia_invento_b2770c_idx'),
        ),
        migrations.AddIndex(
            model_name='rawmaterial',
            index=models.Index(fields=['is_active'], name='raw_materia_is_acti_c5b843_idx'),
        ),
        migrations.AddIndex(
            model_name='holder',
            index=models.Index(fields=['holder_type'], name='inventory_h_holder__ad37b3_idx'),
        ),
        migrations.AddIndex(
            model_name='holder',
            index=models.Index(fields=['status'], name='inventory_h_status_7f2866_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['status'], name='inventory_f_status_2e6b74_idx'),
        ),
        migrations.AddIndex(
            model_name='controlgauge',
            index=models.Index(fields=['status'], name='inventory_c_status_685a1f_idx'),
        ),
        migrations.AddIndex(
            model_name='controlgauge',
            index=models.Index(fields=['upcoming_calibration_date'], name='inventory_c_upcomin_bf5c9c_idx'),
        ),
    ]
