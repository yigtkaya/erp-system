# Generated by Django 5.1.5 on 2025-02-19 07:09

from django.db import migrations, models
import datetime

def convert_year_to_date(apps, schema_editor):
    Machine = apps.get_model('manufacturing', 'Machine')
    db_alias = schema_editor.connection.alias
    
    for machine in Machine.objects.using(db_alias).all():
        if machine.manufacturing_year_old is not None:
            # Convert integer year to January 1st of that year
            machine.manufacturing_year_new = datetime.date(machine.manufacturing_year_old, 1, 1)
            machine.save()

class Migration(migrations.Migration):

    dependencies = [
        ('manufacturing', '0007_machine_maintenance_notes'),
    ]

    operations = [
        # Step 1: Add a new temporary DateField
        migrations.AddField(
            model_name='machine',
            name='manufacturing_year_new',
            field=models.DateField(null=True, blank=True),
        ),
        # Step 2: Rename the existing field to _old
        migrations.RenameField(
            model_name='machine',
            old_name='manufacturing_year',
            new_name='manufacturing_year_old',
        ),
        # Step 3: Run the data migration
        migrations.RunPython(
            convert_year_to_date,
            reverse_code=migrations.RunPython.noop
        ),
        # Step 4: Remove the old field
        migrations.RemoveField(
            model_name='machine',
            name='manufacturing_year_old',
        ),
        # Step 5: Rename the new field to the original name
        migrations.RenameField(
            model_name='machine',
            old_name='manufacturing_year_new',
            new_name='manufacturing_year',
        ),
    ]
