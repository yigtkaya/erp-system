# Generated by Django 5.1.5 on 2025-03-19 19:59

import django.db.models.deletion
from django.db import migrations, models

def forward_data_migration(apps, schema_editor):
    BOM = apps.get_model('manufacturing', 'BOM')
    Product = apps.get_model('inventory', 'Product')
    
    for bom in BOM.objects.all():
        try:
            # Handle case where product is already a Product instance
            if isinstance(bom.product, str) and 'Product object' in bom.product:
                product_id = int(bom.product.split('(')[1].split(')')[0])
                product = Product.objects.get(id=product_id)
            else:
                product = Product.objects.get(product_code=bom.product)
            bom.product_id_temp = product.id
            bom.save()
        except (Product.DoesNotExist, ValueError, IndexError) as e:
            print(f"Warning: Could not process product {bom.product}: {str(e)}")

def reverse_data_migration(apps, schema_editor):
    BOM = apps.get_model('manufacturing', 'BOM')
    Product = apps.get_model('inventory', 'Product')
    
    for bom in BOM.objects.all():
        try:
            product = Product.objects.get(id=bom.product_id_temp)
            bom.product = product.product_code
            bom.save()
        except Product.DoesNotExist:
            print(f"Warning: Product with id {bom.product_id_temp} not found")

class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0006_alter_controlgauge_stock_type'),
        ('manufacturing', '0014_remove_lead_time_days'),
    ]

    operations = [
        # Add temporary column
        migrations.AddField(
            model_name='bom',
            name='product_id_temp',
            field=models.BigIntegerField(null=True),
        ),
        
        # Copy data to temporary column
        migrations.RunPython(
            forward_data_migration,
            reverse_code=reverse_data_migration
        ),
        
        # Remove old product field
        migrations.RemoveField(
            model_name='bom',
            name='product',
        ),
        
        # Add new product field as ForeignKey
        migrations.AddField(
            model_name='bom',
            name='product',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name='boms',
                to='inventory.product',
                null=True  # Temporarily allow null
            ),
        ),
        
        # Copy data from temporary to new field
        migrations.RunSQL(
            "UPDATE manufacturing_bom SET product_id = product_id_temp;",
            reverse_sql="UPDATE manufacturing_bom SET product_id = NULL;"
        ),
        
        # Remove temporary column
        migrations.RemoveField(
            model_name='bom',
            name='product_id_temp',
        ),
        
        # Make product field non-nullable
        migrations.AlterField(
            model_name='bom',
            name='product',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name='boms',
                to='inventory.product'
            ),
        ),
    ]
