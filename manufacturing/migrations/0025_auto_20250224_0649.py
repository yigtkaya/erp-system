# Generated by Django 5.1.5 on 2025-02-24 06:49

from django.db import migrations

def fix_duplicate_sequence_orders(apps, schema_editor):
    BOMComponent = apps.get_model('manufacturing', 'BOMComponent')
    # Get all BOMs
    bom_ids = BOMComponent.objects.values_list('bom_id', flat=True).distinct()
    
    for bom_id in bom_ids:
        # Get all components for this BOM, ordered by sequence and ID
        components = BOMComponent.objects.filter(bom_id=bom_id).order_by('sequence_order', 'id')
        
        # Reset sequence orders to ensure they are unique
        new_sequence = 1
        for component in components:
            if component.sequence_order != new_sequence:
                component.sequence_order = new_sequence
                component.save()
            new_sequence += 1

class Migration(migrations.Migration):

    dependencies = [
        ('manufacturing', '0023_alter_bomcomponent_quantity'),
    ]

    operations = [
        # First fix the data
        migrations.RunPython(fix_duplicate_sequence_orders),
        
        # Then add the unique constraint
        migrations.AlterUniqueTogether(
            name='bomcomponent',
            unique_together={('bom', 'sequence_order')},
        ),
    ]
