# Generated by Django 5.1.5 on 2025-05-08 21:10

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlGauge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stock_name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('CALIBRATION', 'Under Calibration'), ('BROKEN', 'Broken'), ('RETIRED', 'Retired')], default='AVAILABLE', max_length=20)),
                ('calibration_date', models.DateField(blank=True, null=True)),
                ('calibration_interval_days', models.IntegerField(default=365)),
                ('upcoming_calibration_date', models.DateField(blank=True, null=True)),
                ('calibration_certificate', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'control_gauge',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('fixture_type', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('MAINTENANCE', 'Under Maintenance'), ('BROKEN', 'Broken'), ('RETIRED', 'Retired')], default='AVAILABLE', max_length=20)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('check_interval_days', models.IntegerField(default=90)),
                ('last_checked', models.DateField(blank=True, null=True)),
                ('next_check_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'fixture',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ManufacturingProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('process_code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('machine_type', models.CharField(max_length=50)),
                ('standard_setup_time', models.IntegerField(default=0, help_text='Setup time in minutes')),
                ('standard_runtime', models.IntegerField(default=0, help_text='Runtime per unit in minutes')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'manufacturing_process',
                'ordering': ['process_code'],
            },
        ),
        migrations.CreateModel(
            name='ProductionLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('capacity_per_hour', models.IntegerField(help_text='Units per hour')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'production_lines',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ProductWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('REVIEW', 'Under Review'), ('ACTIVE', 'Active'), ('OBSOLETE', 'Obsolete'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('revision_notes', models.TextField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_workflows', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflows', to='inventory.product')),
            ],
            options={
                'db_table': 'product_workflow',
                'ordering': ['product', '-version'],
            },
        ),
        migrations.CreateModel(
            name='ProcessConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sequence_order', models.IntegerField()),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('REVIEW', 'Under Review'), ('ACTIVE', 'Active'), ('OBSOLETE', 'Obsolete')], default='DRAFT', max_length=20)),
                ('machine_type', models.CharField(blank=True, max_length=50, null=True)),
                ('axis_count', models.CharField(blank=True, choices=[('AXIS_2', '2-Axis'), ('AXIS_3', '3-Axis'), ('AXIS_4', '4-Axis'), ('AXIS_5', '5-Axis'), ('AXIS_6', '6-Axis'), ('MULTI', 'Multi-Axis')], max_length=10, null=True)),
                ('setup_time', models.IntegerField(default=0, help_text='Setup time in minutes')),
                ('cycle_time', models.IntegerField(default=0, help_text='Cycle time per unit in seconds')),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('quality_requirements', models.JSONField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('control_gauge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='manufacturing.controlgauge')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('fixture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='manufacturing.fixture')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='manufacturing.manufacturingprocess')),
                ('tool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.tool')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_configs', to='manufacturing.productworkflow')),
            ],
            options={
                'db_table': 'process_config',
                'ordering': ['workflow', 'sequence_order', '-version'],
            },
        ),
        migrations.CreateModel(
            name='WorkCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('capacity_per_hour', models.IntegerField(help_text='Units per hour')),
                ('setup_time_minutes', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('production_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_centers', to='manufacturing.productionline')),
            ],
            options={
                'db_table': 'work_centers',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='MachineDowntime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('reason', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('MAINTENANCE', 'Maintenance'), ('BREAKDOWN', 'Breakdown'), ('SETUP', 'Setup'), ('NO_OPERATOR', 'No Operator'), ('NO_MATERIAL', 'No Material'), ('OTHER', 'Other')], max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('work_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downtimes', to='manufacturing.workcenter')),
            ],
            options={
                'db_table': 'machine_downtimes',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('work_order_number', models.CharField(max_length=50, unique=True)),
                ('quantity_ordered', models.IntegerField()),
                ('quantity_completed', models.IntegerField(default=0)),
                ('quantity_scrapped', models.IntegerField(default=0)),
                ('planned_start_date', models.DateTimeField()),
                ('planned_end_date', models.DateTimeField()),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PLANNED', 'Planned'), ('RELEASED', 'Released'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold')], default='DRAFT', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='work_orders', to='inventory.product')),
                ('sales_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='work_orders', to='sales.salesorder')),
                ('work_center', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='work_orders', to='manufacturing.workcenter')),
            ],
            options={
                'db_table': 'work_orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubWorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('work_order_number', models.CharField(max_length=50, unique=True)),
                ('quantity_ordered', models.IntegerField()),
                ('quantity_completed', models.IntegerField(default=0)),
                ('quantity_scrapped', models.IntegerField(default=0)),
                ('planned_start', models.DateTimeField()),
                ('planned_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PLANNED', 'Planned'), ('RELEASED', 'Released'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold')], default='PLANNED', max_length=20)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('notes', models.TextField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('bom_component', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.productbom')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('target_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.inventorycategory')),
                ('parent_work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_work_orders', to='manufacturing.workorder')),
            ],
            options={
                'db_table': 'sub_work_order',
                'ordering': ['planned_start'],
            },
        ),
        migrations.CreateModel(
            name='MaterialAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('required_quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('allocated_quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('consumed_quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('is_allocated', models.BooleanField(default=False)),
                ('allocation_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='material_allocations', to='inventory.product')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_allocations', to='manufacturing.workorder')),
            ],
            options={
                'db_table': 'material_allocations',
            },
        ),
        migrations.CreateModel(
            name='WorkOrderOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operation_sequence', models.IntegerField()),
                ('operation_name', models.CharField(max_length=100)),
                ('planned_start_date', models.DateTimeField()),
                ('planned_end_date', models.DateTimeField()),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('setup_time_minutes', models.IntegerField(default=0)),
                ('run_time_minutes', models.IntegerField()),
                ('quantity_completed', models.IntegerField(default=0)),
                ('quantity_scrapped', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PLANNED', 'Planned'), ('RELEASED', 'Released'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold')], default='PLANNED', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_operations', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('work_center', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='manufacturing.workcenter')),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='manufacturing.workorder')),
            ],
            options={
                'db_table': 'work_order_operations',
                'ordering': ['operation_sequence'],
            },
        ),
        migrations.CreateModel(
            name='ProductionOutput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity_good', models.IntegerField()),
                ('quantity_scrapped', models.IntegerField(default=0)),
                ('output_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='production_outputs', to=settings.AUTH_USER_MODEL)),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to='manufacturing.workorder')),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manufacturing.workorderoperation')),
            ],
            options={
                'db_table': 'production_outputs',
                'ordering': ['-output_date'],
            },
        ),
        migrations.AddIndex(
            model_name='controlgauge',
            index=models.Index(fields=['stock_name'], name='control_gau_stock_n_852e3f_idx'),
        ),
        migrations.AddIndex(
            model_name='controlgauge',
            index=models.Index(fields=['status'], name='control_gau_status_15841b_idx'),
        ),
        migrations.AddIndex(
            model_name='controlgauge',
            index=models.Index(fields=['calibration_date'], name='control_gau_calibra_bdc021_idx'),
        ),
        migrations.AddIndex(
            model_name='controlgauge',
            index=models.Index(fields=['upcoming_calibration_date'], name='control_gau_upcomin_6609a5_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['name'], name='fixture_name_88bb29_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['status'], name='fixture_status_7a032f_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['location'], name='fixture_locatio_ee9697_idx'),
        ),
        migrations.AddIndex(
            model_name='manufacturingprocess',
            index=models.Index(fields=['process_code'], name='manufacturi_process_b886b0_idx'),
        ),
        migrations.AddIndex(
            model_name='manufacturingprocess',
            index=models.Index(fields=['machine_type'], name='manufacturi_machine_891307_idx'),
        ),
        migrations.AddIndex(
            model_name='productworkflow',
            index=models.Index(fields=['product', 'status'], name='product_wor_product_3a8ef2_idx'),
        ),
        migrations.AddIndex(
            model_name='productworkflow',
            index=models.Index(fields=['product', 'version'], name='product_wor_product_eb0959_idx'),
        ),
        migrations.AddIndex(
            model_name='productworkflow',
            index=models.Index(fields=['effective_date'], name='product_wor_effecti_23d0b8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productworkflow',
            unique_together={('product', 'version')},
        ),
        migrations.AddIndex(
            model_name='processconfig',
            index=models.Index(fields=['workflow', 'sequence_order'], name='process_con_workflo_7c7bfc_idx'),
        ),
        migrations.AddIndex(
            model_name='processconfig',
            index=models.Index(fields=['workflow', 'process'], name='process_con_workflo_e3889d_idx'),
        ),
        migrations.AddIndex(
            model_name='processconfig',
            index=models.Index(fields=['status'], name='process_con_status_72b79b_idx'),
        ),
        migrations.AddIndex(
            model_name='processconfig',
            index=models.Index(fields=['version'], name='process_con_version_0056b2_idx'),
        ),
        migrations.AddIndex(
            model_name='processconfig',
            index=models.Index(fields=['tool'], name='process_con_tool_id_f1eb6c_idx'),
        ),
        migrations.AddIndex(
            model_name='processconfig',
            index=models.Index(fields=['control_gauge'], name='process_con_control_e03711_idx'),
        ),
        migrations.AddIndex(
            model_name='processconfig',
            index=models.Index(fields=['fixture'], name='process_con_fixture_bfef12_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='processconfig',
            unique_together={('workflow', 'sequence_order', 'version')},
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['work_order_number'], name='work_orders_work_or_0e9ded_idx'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['status'], name='work_orders_status_3f6c76_idx'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['planned_start_date'], name='work_orders_planned_87e983_idx'),
        ),
        migrations.AddIndex(
            model_name='subworkorder',
            index=models.Index(fields=['status'], name='sub_work_or_status_b13d50_idx'),
        ),
        migrations.AddIndex(
            model_name='subworkorder',
            index=models.Index(fields=['parent_work_order'], name='sub_work_or_parent__592e38_idx'),
        ),
        migrations.AddIndex(
            model_name='subworkorder',
            index=models.Index(fields=['bom_component'], name='sub_work_or_bom_com_01d7d0_idx'),
        ),
        migrations.AddIndex(
            model_name='subworkorder',
            index=models.Index(fields=['planned_start'], name='sub_work_or_planned_79dff1_idx'),
        ),
        migrations.AddIndex(
            model_name='subworkorder',
            index=models.Index(fields=['planned_end'], name='sub_work_or_planned_2dbf03_idx'),
        ),
        migrations.AddIndex(
            model_name='subworkorder',
            index=models.Index(fields=['assigned_to'], name='sub_work_or_assigne_264930_idx'),
        ),
        migrations.AddIndex(
            model_name='subworkorder',
            index=models.Index(fields=['target_category'], name='sub_work_or_target__028e49_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='materialallocation',
            unique_together={('work_order', 'material')},
        ),
        migrations.AlterUniqueTogether(
            name='workorderoperation',
            unique_together={('work_order', 'operation_sequence')},
        ),
    ]
