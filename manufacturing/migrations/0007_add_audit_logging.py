# Generated by Django 4.2.8 on 2025-06-02 19:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0008_rename_code_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sales', '0005_shipping'),
        ('manufacturing', '0006_add_performance_indexes'),
    ]

    operations = [
        migrations.AlterField(
            model_name='machine',
            name='axis_count',
            field=models.CharField(blank=True, choices=[('AXIS_2', '2-Axis'), ('AXIS_3', '3-Axis'), ('AXIS_4', '4-Axis'), ('AXIS_5', '5-Axis'), ('AXIS_6', '6-Axis'), ('MULTI', 'Multi-Axis')], help_text='Number of axes for machining operations and complexity planning', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='brand',
            field=models.CharField(blank=True, help_text='Manufacturer brand of the machine', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='description',
            field=models.TextField(blank=True, help_text='Additional notes and specifications about the machine', null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='holder_type',
            field=models.CharField(blank=True, help_text='Tool holder type for tool compatibility (e.g., BT40, HSK63)', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='internal_cooling',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Internal cooling pressure in bars for high-speed machining', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this machine is available for production scheduling'),
        ),
        migrations.AlterField(
            model_name='machine',
            name='last_maintenance_date',
            field=models.DateField(blank=True, help_text='Date of the last completed maintenance', null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='machine_code',
            field=models.CharField(help_text='Unique identifier for the machine (e.g., CNC001, MILL02)', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='machine_type',
            field=models.CharField(choices=[('CNC_MILLING', 'CNC Milling'), ('CNC_LATHE', 'CNC Lathe'), ('DRILLING', 'Drilling'), ('GRINDING', 'Grinding'), ('WELDING', 'Welding'), ('ASSEMBLY', 'Assembly'), ('INSPECTION', 'Inspection'), ('OTHER', 'Other')], help_text='Type of machine for production planning and scheduling', max_length=50),
        ),
        migrations.AlterField(
            model_name='machine',
            name='machine_weight_kg',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Machine weight in kilograms for floor loading calculations', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='maintenance_interval',
            field=models.IntegerField(default=90, help_text='Days between required maintenance cycles'),
        ),
        migrations.AlterField(
            model_name='machine',
            name='maintenance_notes',
            field=models.TextField(blank=True, help_text='Notes from maintenance activities and service history', null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='manufacturing_year',
            field=models.DateField(blank=True, help_text='Year the machine was manufactured for depreciation tracking', null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='max_part_size',
            field=models.CharField(blank=True, help_text='Maximum workpiece dimensions (e.g., 500x400x300mm)', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='model',
            field=models.CharField(blank=True, help_text='Model number or name from the manufacturer', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='motor_power_kva',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Motor power in KVA for electrical load planning', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='nc_control_unit',
            field=models.CharField(blank=True, help_text='Numerical control unit brand and model (e.g., Fanuc 0i-MF)', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='next_maintenance_date',
            field=models.DateField(blank=True, help_text='Calculated date for next scheduled maintenance', null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='power_hp',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Total machine power in horsepower', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='serial_number',
            field=models.CharField(blank=True, help_text="Manufacturer's serial number for warranty and service tracking", max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='spindle_motor_power_10_percent_kw',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Spindle motor power at 10% duty cycle in kW', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='spindle_motor_power_30_percent_kw',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Spindle motor power at 30% duty cycle in kW', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='spindle_speed_rpm',
            field=models.IntegerField(blank=True, help_text='Maximum spindle speed in RPM for cutting speed calculations', null=True),
        ),
        migrations.AlterField(
            model_name='machine',
            name='status',
            field=models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('MAINTENANCE', 'Under Maintenance'), ('BROKEN', 'Broken'), ('RETIRED', 'Retired')], default='AVAILABLE', help_text='Current operational status for production planning', max_length=20),
        ),
        migrations.AlterField(
            model_name='machine',
            name='tool_count',
            field=models.IntegerField(blank=True, help_text='Number of tool stations available for automatic tool changing', null=True),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='actual_end_date',
            field=models.DateTimeField(blank=True, help_text='Actual date and time production completed', null=True),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='actual_start_date',
            field=models.DateTimeField(blank=True, help_text='Actual date and time production started', null=True),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional instructions or notes for production', null=True),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='planned_end_date',
            field=models.DateTimeField(help_text='Scheduled completion date and time'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='planned_start_date',
            field=models.DateTimeField(help_text='Scheduled start date and time for production'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='primary_machine',
            field=models.ForeignKey(blank=True, help_text='Primary machine assigned for this work order', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_work_orders', to='manufacturing.machine'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='priority',
            field=models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', help_text='Priority level for production scheduling', max_length=10),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='product',
            field=models.ForeignKey(help_text='Product to be manufactured in this work order', on_delete=django.db.models.deletion.PROTECT, related_name='work_orders', to='inventory.product'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='quantity_completed',
            field=models.IntegerField(default=0, help_text='Quantity successfully completed so far'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='quantity_ordered',
            field=models.IntegerField(help_text='Total quantity to be produced'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='quantity_scrapped',
            field=models.IntegerField(default=0, help_text='Quantity rejected due to quality issues'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='sales_order',
            field=models.ForeignKey(blank=True, help_text='Source sales order that triggered this production', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='work_orders', to='sales.salesorder'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Draft'), ('PLANNED', 'Planned'), ('RELEASED', 'Released'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold')], default='DRAFT', help_text='Current status of the work order', max_length=20),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='work_order_number',
            field=models.CharField(help_text='Unique work order identifier for tracking production', max_length=50, unique=True),
        ),
        migrations.CreateModel(
            name='ManufacturingAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('log_level', models.CharField(choices=[('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', help_text='Severity level of the log entry', max_length=10)),
                ('action_type', models.CharField(choices=[('WORK_ORDER_CREATE', 'Work Order Created'), ('WORK_ORDER_UPDATE', 'Work Order Updated'), ('WORK_ORDER_START', 'Work Order Started'), ('WORK_ORDER_COMPLETE', 'Work Order Completed'), ('WORK_ORDER_CANCEL', 'Work Order Cancelled'), ('MATERIAL_ALLOCATE', 'Materials Allocated'), ('MATERIAL_ISSUE', 'Materials Issued'), ('PRODUCTION_RECORD', 'Production Output Recorded'), ('MACHINE_STATUS_CHANGE', 'Machine Status Changed'), ('MACHINE_MAINTENANCE', 'Machine Maintenance Recorded'), ('OPERATION_START', 'Operation Started'), ('OPERATION_COMPLETE', 'Operation Completed'), ('DOWNTIME_RECORD', 'Downtime Recorded'), ('API_REQUEST', 'API Request'), ('BUSINESS_RULE_VIOLATION', 'Business Rule Violation'), ('SYSTEM_ERROR', 'System Error')], help_text='Type of action performed', max_length=30)),
                ('entity_type', models.CharField(blank=True, help_text='Type of entity affected (WorkOrder, Machine, etc.)', max_length=50, null=True)),
                ('entity_id', models.PositiveIntegerField(blank=True, help_text='ID of the affected entity', null=True)),
                ('message', models.TextField(help_text='Human-readable log message')),
                ('details', models.JSONField(blank=True, help_text='Additional structured data', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'manufacturing_audit_log',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user'], name='manufacturi_user_id_de563e_idx'), models.Index(fields=['log_level'], name='manufacturi_log_lev_a5936a_idx'), models.Index(fields=['action_type'], name='manufacturi_action__f7f8f1_idx'), models.Index(fields=['entity_type'], name='manufacturi_entity__32ef7e_idx'), models.Index(fields=['entity_id'], name='manufacturi_entity__10cf86_idx'), models.Index(fields=['created_at'], name='manufacturi_created_48955b_idx'), models.Index(fields=['user', 'action_type'], name='manufacturi_user_id_c8cb55_idx'), models.Index(fields=['entity_type', 'entity_id'], name='manufacturi_entity__c0f0e9_idx'), models.Index(fields=['log_level', 'created_at'], name='manufacturi_log_lev_afa2ea_idx')],
            },
        ),
    ]
